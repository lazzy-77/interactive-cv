{"version":3,"sources":["assets/images/user-pic.jpg","components/AnimatedCard.js","assets/images/menu-icon.svg","pages/MainPage/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AnimatedCard","params","pressed","onClick","multiplierScale","undefined","scale","calc","mass","x","y","window","innerHeight","innerWidth","useSpring","xys","config","wobbly","props","set","div","class","className","id","onMouseMove","clientX","clientY","onMouseLeave","style","transform","interpolate","s","children","MainPage","useState","fullMenuVisible","opacity","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kOAAAA,EAAOC,QAAU,IAA0B,sC,gHC8C5BC,EAjCM,SAACC,GACpB,IAAMC,EAAUD,EAAOE,QAEjBC,OAAmCC,IAAjBJ,EAAOK,MAAsB,EAAIL,EAAOK,MAI1DC,QAFiCF,IAAhBJ,EAAOO,MAAyBP,EAAOO,KAEjD,SAACC,EAAGC,GAAJ,MAAU,GACnBA,EAAIC,OAAOC,YAAc,GAAK,IAC/BH,EAAIE,OAAOE,WAAa,GAAK,GAC9B,KAAOT,KAVsB,EAeVU,aAAU,iBAAO,CACpCC,IAAK,CAAC,EAAG,EAAG,GACZC,OAAQA,IAAOC,WAjBc,mBAexBC,EAfwB,KAejBC,EAfiB,KAmB/B,OACE,kBAAC,IAASC,IAAV,CACEC,MAAOpB,EAAOqB,UACdC,GAAItB,EAAOsB,GACXC,YAAa,gBAAYf,EAAZ,EAAGgB,QAAqBf,EAAxB,EAAegB,QAAf,OAAgCP,EAAI,CAAEJ,IAAKR,EAAKE,EAAGC,MAChEiB,aAAc,kBAAMR,EAAI,CAAEJ,IAAK,CAAC,EAAG,EAAG,MACtCa,MAAO,CAAEC,UAAWX,EAAMH,IAAIe,aAbpB,SAACrB,EAAGC,EAAGqB,GAAP,2CACkBtB,EADlB,wBACmCC,EAAI,EADvC,sBACsDqB,EADtD,SAcV5B,QAASD,GAERD,EAAO+B,W,MCyBC,I,MA1Df,ICiFeC,EAnEE,WAAO,IAAD,EACyBC,oBAAS,GADlC,mBACdC,EADc,UAGKrB,YAAU,CAClCe,UAAWM,EAAe,oCAC1BC,QAASD,EAAkB,EAAI,IAGjC,OACE,yBAAKb,UAAU,aAQb,kBAAC,EAAD,CAAcA,UAAU,qBACtB,yBAAKA,UAAU,cACb,yBAAKC,GAAG,gBAEV,yBAAKD,UAAU,8BAGf,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,8BAAf,WACA,yBAAKA,UAAU,6BAAf,2BAGJ,kBAAC,EAAD,CACEhB,MAAO,EACPgB,UAAU,uBAGV,yBAAKA,UAAU,+BACf,yBAAKA,UAAU,gCACf,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,gCAAf,aACA,yBAAKA,UAAU,+BAAf,wCAKJ,kBAAC,EAAD,CAAchB,MAAO,EAAGgB,UAAU,sBAChC,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,+BACf,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,+BAAf,YACA,yBAAKA,UAAU,8BAAf,uDAKJ,kBAAC,EAAD,CAAchB,MAAO,EAAGgB,UAAU,qBAChC,yBAAKA,UAAU,6BACf,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,8BAAf,WACA,yBAAKA,UAAU,6BAAf,4C,QCnEKe,MARf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QCIcC,QACW,cAA7B3B,OAAO4B,SAASC,UAEe,UAA7B7B,OAAO4B,SAASC,UAEhB7B,OAAO4B,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.73d3b963.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-pic.93c9874f.jpg\";","import React from 'react';\r\nimport { animated, useSpring, config } from 'react-spring';\r\n// import './AnimatedCard.css';\r\n\r\n/**\r\n * Component params or \"props\"\r\n * scale [value between 1-10]\r\n * rotationX\r\n * rotationY\r\n * mass\r\n * @param {*} params\r\n */\r\n\r\nconst AnimatedCard = (params) => {\r\n  const pressed = params.onClick;\r\n\r\n  const multiplierScale = params.scale === undefined ? 1 : params.scale;\r\n\r\n  const multiplierMass = params.mass === undefined ? 1 : params.mass;\r\n\r\n  const calc = (x, y) => [\r\n    -(y - window.innerHeight / 3) / 30,\r\n    (x - window.innerWidth / 3) / 30,\r\n    1.05 * multiplierScale,\r\n  ];\r\n  const trans = (x, y, s) =>\r\n    `perspective(100vw) rotateX(${x}deg) rotateY(${y / 2}deg) scale(${s})`;\r\n\r\n  const [props, set] = useSpring(() => ({\r\n    xys: [0, 0, 1],\r\n    config: config.wobbly,\r\n  }));\r\n  return (\r\n    <animated.div\r\n      class={params.className}\r\n      id={params.id}\r\n      onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\r\n      onMouseLeave={() => set({ xys: [0, 0, 1] })}\r\n      style={{ transform: props.xys.interpolate(trans) }}\r\n      onClick={pressed}\r\n    >\r\n      {params.children}\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default AnimatedCard;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgMenuIcon = function SvgMenuIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 384 384\",\n    style: {\n      enableBackground: \"new 0 0 384 384\"\n    },\n    xmlSpace: \"preserve\",\n    width: 512,\n    height: 512,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 277.333,\n    width: 384,\n    height: 42.667,\n    \"data-original\": \"#000000\",\n    className: \"active-path\",\n    \"data-old_color\": \"#000000\",\n    style: {\n      fill: \"#FEFEFE\"\n    }\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 170.667,\n    width: 384,\n    height: 42.667,\n    \"data-original\": \"#000000\",\n    className: \"active-path\",\n    \"data-old_color\": \"#000000\",\n    style: {\n      fill: \"#FEFEFE\"\n    }\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 64,\n    width: 384,\n    height: 42.667,\n    \"data-original\": \"#000000\",\n    className: \"active-path\",\n    \"data-old_color\": \"#000000\",\n    style: {\n      fill: \"#FEFEFE\"\n    }\n  }))))));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgMenuIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/menu-icon.e681f0ec.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\r\nimport './MainPage.css';\r\nimport AnimatedCard from '../../components/AnimatedCard';\r\nimport { MenuButton } from '../../components/MenuButton';\r\n// import { ReactComponent as HtmlIcon } from './assets/images/html-5-icon.svg';\r\n// import { ReactComponent as CssIcon } from './assets/images/css-icon.svg';\r\n// import { ReactComponent as JavaIcon } from './assets/images/java-icon.svg';\r\n// import { ReactComponent as SqlIcon } from './assets/images/sql-icon.svg';\r\n// import { ReactComponent as JavascriptIcon } from './assets/images/javascript-icon.svg';\r\n// import { ReactComponent as ReactIcon } from './assets/images/react-icon.svg';\r\n// import { ReactComponent as ProfileIcon } from './assets/images/person-icon.svg';\r\n// import { ReactComponent as CodeIcon } from './assets/images/code-icon.svg';\r\n// import { ReactComponent as HobbyIcon } from './assets/images/guitar-icon.svg';\r\n// import { ReactComponent as LinkedInIcon } from './assets/images/linkedin-icon.svg';\r\n// import { ReactComponent as EmailIcon } from './assets/images/email-icon.svg';\r\n// import { ReactComponent as FacebookIcon } from './assets/images/facebook-icon.svg';\r\n// import { ReactComponent as InstagramIcon } from './assets/images/instagram-icon.svg';\r\nimport { ReactComponent as MenuIcon } from '../../assets/images/menu-icon.svg';\r\nimport UserPic from '../../assets/images/user-pic.jpg';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSpring } from 'react-spring';\r\n\r\nconst MainPage = () => {\r\n  const [fullMenuVisible, setFullMenuVisible] = useState(false);\r\n\r\n  const fullMenuAnimation = useSpring({\r\n    transform: fullMenuVisible ? `translateY(0)` : `translateY(-100%)`,\r\n    opacity: fullMenuVisible ? 1 : 0,\r\n  });\r\n\r\n  return (\r\n    <div className='container'>\r\n      {/* <div\r\n        className='menu'\r\n        onClick={() => setFullMenuVisible(!fullMenuVisible)}\r\n      >\r\n        <MenuButton style={fullMenuAnimation} />\r\n        <ion-icon name='menu' color='black'></ion-icon>\r\n      </div> */}\r\n      <AnimatedCard className='profile-container'>\r\n        <div className='main-title'>\r\n          <div id='main-title'></div>\r\n        </div>\r\n        <div className='profile-container-content'>\r\n          {/* <img src={UserPic} alt='Lance Nieva' id='user-pic' /> */}\r\n        </div>\r\n        <div className='profile-container-title'>\r\n          <div className='profile-container-subtitle'>PROFILE</div>\r\n          <div className='profile-container-regfont'>A little bit about me</div>\r\n        </div>\r\n      </AnimatedCard>\r\n      <AnimatedCard\r\n        scale={1}\r\n        className='education-container'\r\n        // onClick={() => alert('pressed')}\r\n      >\r\n        <div className='education-container-header'></div>\r\n        <div className='education-container-content'></div>\r\n        <div className='education-container-title'>\r\n          <div className='education-container-subtitle'>EDUCATION</div>\r\n          <div className='education-container-regfont'>\r\n            Information on what I have studied\r\n          </div>\r\n        </div>\r\n      </AnimatedCard>\r\n      <AnimatedCard scale={1} className='projects-container'>\r\n        <div className='projects-container-header'></div>\r\n        <div className='projects-container-content'></div>\r\n        <div className='projects-container-title'>\r\n          <div className='projects-container-subtitle'>PROJECTS</div>\r\n          <div className='projects-container-regfont'>\r\n            Extra-curricular projects I made during down time\r\n          </div>\r\n        </div>\r\n      </AnimatedCard>\r\n      <AnimatedCard scale={1} className='hobbies-container'>\r\n        <div className='hobbies-container-header'></div>\r\n        <div className='hobbies-container-content'></div>\r\n        <div className='hobbies-container-title'>\r\n          <div className='hobbies-container-subtitle'>HOBBIES</div>\r\n          <div className='hobbies-container-regfont'>\r\n            Things I like to do in my spare time\r\n          </div>\r\n        </div>\r\n      </AnimatedCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport MainPage from './pages/MainPage/MainPage';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <MainPage />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}